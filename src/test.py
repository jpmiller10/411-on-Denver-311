from shapely.geometry import Point, Polygon, MultiPolygon
import numpy as np
import pandas as pd
import datetime
import json
import os
from pandas.io.json import json_normalize

df_nbh_stats = pd.read_json('data/nbh_stats.json')
df_nbh = json_normalize(df_nbh_stats["features"])
#remove all unnecessary data - NBHD_NAME, shape, and coordinates will remain
df_nbh_shapes = df_nbh.drop(['type', 'properties.NBHD_ID', 'properties.TYPOLOGY', 'properties.NOTES'], axis =1)

df_nbh_shapes['geometry.type']= df_nbh_shapes['geometry.type'].astype("category") 

def to_neighborhood(df1, df2):
    point = Point(df1(['Latitude', 'Longitude'])
    shape = df2['geometry.type']
    for nbh in df2['geometry.coordinates']:
        if point.within(shape) == True:
            df1.Neighborhood = df2.properties.NBHD_ID


#use df.apply(,axis=1) to iterate through every row in your dataframe
df1.apply(plotDot, axis = 1)

wwp =([-104.97342421733947,39.68982397334008],[-104.97356007083334,39.689890610582324],[-104.97360564899907,39.68991296566361],[-104.97474066412536,39.69048263573461],[-104.97517630470907,39.69072426961304],[-104.97578763693156,39.691120086052024],[-104.97616098628885,39.69139499505144],[-104.97679770860361,39.69192952499469],[-104.9781394754815,39.693140112395724],[-104.97909851896804,39.69400535754124],[-104.97910754100087,39.694013497570836],[-104.9794141761156,39.69428451855612],[-104.97988431282477,39.69470004706676],[-104.98027281923714,39.69502774125806],[-104.98105015306311,39.69564118048817],[-104.9811704095003,39.695742379856085],[-104.98202744561598,39.69648919057107],[-104.982218069309,39.696657749183885],[-104.9827695603139,39.696659576190484],[-104.98394265057863,39.69662041404814],[-104.98507048667881,39.69662534806605],[-104.98621940085559,39.69662821207646],[-104.98743074025936,39.696634306098645],[-104.98747549042207,39.700212908108426],[-104.98747714842807,39.700345459590324],[-104.98746959040062,39.70101528202542],[-104.9874753124214,39.70118562764469],[-104.9874948954926,39.70126722294134],[-104.98752898661655,39.70140927245774],[-104.9875403586579,39.70153051089852],[-104.98754627367936,39.701727469614525],[-104.98755751772023,39.70192055431647],[-104.98756193673631,39.701996445592385],[-104.98752805561315,39.70213424809333],[-104.98748791146721,39.70264298494283],[-104.98748804446768,39.70335470453023],[-104.98748864546985,39.70388077744275],[-104.9875577707212,39.705730382166905],[-104.9876227819575,39.707535700730034],[-104.98760180388126,39.70846146109557],[-104.98759807986772,39.70933650927674],[-104.98758171480824,39.71023895355751],[-104.98757500278384,39.71115791289833],[-104.98696362256118,39.71115867990113],[-104.98636912639995,39.71115951690416],[-104.98577909725492,39.71115693889482],[-104.98519440112926,39.71115438088549],[-104.98461238201338,39.71115011686999],[-104.98401436883933,39.711145778854245],[-104.9834323377234,39.71114322384494],[-104.98278188535875,39.71114036583458],[-104.98213592501037,39.71113065979927],[-104.98212792798131,39.711130624799125],[-104.9821048248973,39.71113052279878],[-104.98153172281383,39.71112216476837],[-104.98096923576895,39.711120370761876],[-104.98038275463682,39.711118810756204],[-104.9797980785113,39.7111134807368],[-104.97922584443097,39.71110820371763],[-104.97866248638292,39.711103991702316],[-104.97808224627346,39.71109970268674],[-104.97749751814774,39.71110122469224],[-104.97690746000262,39.71110271969769],[-104.97632095887042,39.71110388470191],[-104.97573623174469,39.711105398707446],[-104.97515328362539,39.71110657371173],[-104.97456056247057,39.71110770171583],[-104.97396695431257,39.71110847971863],[-104.97339289922564,39.71110899972052],[-104.97337629316524,39.709295999129495],[-104.97337384615633,39.70749095156731],[-104.97337326915425,39.705673558960314],[-104.97337886717463,39.703862026374566],[-104.97338352519154,39.70205735081379],[-104.97338944021305,39.70020360807462],[-104.97340096125492,39.69843156063246],[-104.97338110118272,39.69835494735395],[-104.97338801720787,39.69660449799028],[-104.97341261629731,39.69474706023766],[-104.97341393830209,39.69297159778307],[-104.97342629234703,39.691133564100994],[-104.97342685234906,39.69074693869544],[-104.9734264023474,39.69047200369596],[-104.97341774631593,39.69000204298743],[-104.97342421733947,39.68982397334008])
poly = Polygon(wwp)
#multi = Polygon(vv)

p1 = Point(-104.973154, 39.680213)
p2 = Point(-104.974596568276, 39.701340618176)

#print(p1.within(poly))
#print(p2.within(poly))